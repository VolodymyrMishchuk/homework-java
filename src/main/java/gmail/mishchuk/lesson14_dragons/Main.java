package gmail.mishchuk.lesson14_dragons;

import gmail.mishchuk.lesson14_dragons.quasiAnimals.Dragon;
import gmail.mishchuk.lesson14_dragons.quasiAnimals.TypeOfDragons;

import java.util.Scanner;
import java.util.Random;

public class Main {
    public static void main(String[] args) {
        String intro = "\n\t\t\t –í–ê–ñ–õ–ò–í–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø!" +
                "\n –ù–∞—Ä–∞–∑—ñ –æ—á—ñ–∫—É—é –≤—ñ–¥ —Ç–µ–±–µ –ø–µ–≤–Ω–∏—Ö –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–∏—Ö –¥—ñ–π," +
                "\n –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–µ –ø—ñ–¥–≤–µ–¥–∏!" +
                "\n\n –ó–∞—Ä–∞–∑ –º–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ –¥—Ä–∞–∫–æ–Ω—ñ–≤, —ñ —Å–∞–º–µ —Ç–∏ –≤–∏—Ä—ñ—à—É—î—à –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –≤–µ–ª–∏–∫–∏–π" +
                "\n (–±–µ–∑ —Ñ–∞–Ω–∞—Ç–∏–∑–º—É, –±–æ —Ç–æ–±—ñ —â–µ –∑–∞–ø–æ–≤–Ω—é–≤–∞—Ç–∏)))" +
                "\n\n –¢–æ–º—É –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Ü–∏—Ñ—Ä—É –≤—ñ–¥ 1 –¥–æ 10:";
        System.out.println(intro);

        Scanner scanner = new Scanner(System.in);
        int arrayLength;

        while (true) {
            if (scanner.hasNextInt()) {
                arrayLength = scanner.nextInt();
                if (arrayLength >= 1 && arrayLength <= 10) {
                    break;
                } else {
                    System.out.println("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 10!");
                }
            } else {
                System.out.println("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ!");
                scanner.next();
            }
        }

        Dragon[] dragons = new Dragon[arrayLength];

        System.out.println(
                "–¢–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä–∏–º–æ –Ω–∞—à–∏—Ö –¥—Ä–∞–∫–æ–Ω—á–∏–∫—ñ–≤!" +
                "\n(–ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ Enter)"
        );

        scanner.nextLine(); // –æ—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞

        for (int i = 0; i < dragons.length; i++) {
            System.out.println("\n–°—Ç–≤–æ—Ä—é—î–º–æ –¥—Ä–∞–∫–æ–Ω—á–∏–∫–∞ ‚Ññ" + (i + 1));

            System.out.print("–ù–∞–∑–∏–≤–∞—î—Ç—å—Å—è: ");
            String name = scanner.nextLine();

            int age;
            while (true) {
                System.out.print("–ô–æ–≥–æ –≤—ñ–∫: ");
                if (scanner.hasNextInt()) {
                    age = scanner.nextInt();
                    if (age > 0) {
                        break;
                    } else {
                        System.out.println("–í—ñ–∫ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –±—ñ–ª—å—à–µ 0!");
                    }
                } else {
                    System.out.println("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ!");
                    scanner.next();
                }
            }

            double weight;
            while (true) {
                System.out.print("–í–∞–∂–∏—Ç—å: ");
                if (scanner.hasNextDouble()) {
                    weight = scanner.nextDouble();
                    if (weight > 0) {
                        break;
                    } else {
                        System.out.println("–í–∞–≥–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –±—ñ–ª—å—à–µ 0!");
                    }
                } else {
                    System.out.println("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ!");
                    scanner.next();
                }
            }

            System.out.print("Type of dragon: ");
            String typeOfDragonsString = scanner.next();
            TypeOfDragons typeOfDragons = TypeOfDragons.valueOf(typeOfDragonsString);

            scanner.nextLine(); // –æ—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞
            dragons[i] = new Dragon(name, age, weight, typeOfDragons);
        }

        boolean executeLoop = true;

        while (executeLoop) {
            System.out.println("""
                    
                    –û–±–µ—Ä–∏ –¥—ñ—é:\s
                     1 - –î—Ä–∞–∫–æ–Ω–∏ –≤—ñ—Ç–∞—é—Ç—å—Å—è;
                     2 - –î—Ä–∞–∫–æ–Ω–∏ –Ω–∞–∑–∏–≤–∞—é—Ç—å—Å—è;
                     3 - –î—Ä–∞–∫–æ–Ω–∏ –ø—É—Å–∫–∞—é—Ç—å –≤–æ–≥–æ–Ω—å;
                     4 - –ß–µ–º–Ω–æ –ø–æ–ø—Ä–æ—â–∞—Ç–∏—Å—è —ñ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É.""");

            if (scanner.hasNextInt()) {
                int choice = scanner.nextInt();
                scanner.nextLine(); // –æ—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞

                switch (choice) {
                    case 1 -> greetDragons(dragons);
                    case 2 -> nameDragons(dragons);
                    case 3 -> breatheFire(dragons);
                    case 4 -> {
                        System.out.println("–î—Ä–∞–∫–æ–Ω–∏ –∫–∞–∂—É—Ç—å: '–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è, –¥—Ä—É–∂–µ! üêâ'");
                        executeLoop = false;
                    }
                    default -> System.out.println("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 4!");
                }
            } else {
                System.out.println("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ!");
                scanner.next();
            }
        }

        scanner.close();
    }

    public static void greetDragons(Dragon[] dragons) {
        System.out.println("\n–î—Ä–∞–∫–æ–Ω–∏ –≤—ñ—Ç–∞—é—Ç—å —Ç–µ–±–µ!");
        for (Dragon dragon : dragons) {
            System.out.println(dragon.getName() + " –∫–∞–∂–µ: '–ü—Ä–∏–≤—ñ—Ç, –ª—é–¥–∏–Ω–æ! üê≤'");
        }
    }

    public static void nameDragons(Dragon[] dragons) {
        System.out.println("\n–ù–∞—à—ñ –¥—Ä–∞–∫–æ–Ω–∏:");
        for (Dragon dragon : dragons) {
            System.out.println("- " + dragon.getName());
        }
    }

    public static void breatheFire(Dragon[] dragons) {
        Random random = new Random();
        System.out.println("\n–û–±–µ—Ä–µ–∂–Ω–æ, –≤–æ–≥–Ω–∏–∫-–≤–æ–≥–Ω–∏–∫!");
        for (Dragon dragon : dragons) {
            int fireAmount = random.nextInt(5) + 1;
            System.out.print(dragon.getName() + " –¥–∏—Ö–Ω—É–≤: ");
            System.out.println("üî•".repeat(fireAmount));
        }
    }
}